# INFO
info.name=applicantJobsService
info.component=Applicant Jobs Service API

# APPLICATION CONFIGURATION
server.servlet.contextPath=/applicant-jobs-service


# RIBBON with Eureka enabled true
account-service.ribbon.eureka.enabled=true
account-service.ribbon.serverListRefreshInterval=60000

# JMX - TO DEPLOY MULTIPLE SPRING BOOTS IN A WEBSERVER
endpoints.jmx.unique-names=true
spring.jmx.default-domain=applicant-jobs-service

# HYSTRIX
hystrix.threadpool.default.coreSize=100
hystrix.threadpool.default.maxQueueSize=-1
hystrix.threadpool.default.queueSizeRejectionThreshold=5
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=30000
hystrix.command.default.circuitBreaker.requestVolumeThreshold=3
hystrix.command.default.execution.isolation.strategy=THREAD
hystrix.streamEnabled=true
hystrix.shareSecurityContext=true

# JPA CONFIGURATION, other environment must override
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect

# Datasource configuration for jobs, other environment must override
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.password=${jobs.db.password}
spring.datasource.platform=mssql
spring.datasource.url=jdbc:sqlserver://${environment.db.hostname};databaseName=${jobs.db.name};SelectMethod=Cursor;
spring.datasource.username=jobs_app_user

# Quartz specific datasource configuration, other environment must override
org.quartz.dataSource.quartzDataSource.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
org.quartz.dataSource.quartzDataSource.password=${jobsService.quartz.db.password}
org.quartz.dataSource.quartzDataSource.URL=jdbc:sqlserver://${environment.db.hostname};databaseName=${jobsService.quartz.db.name};SelectMethod=Cursor;
org.quartz.dataSource.quartzDataSource.user=qrtz_app_user
org.quartz.dataSource.quartzDataSource.maxConnections=10

# hystrix 
hystrix.shareSecurityContext=true

# subscriber key for messaging api.  Subscriber name : LMS , other environment must override
nextgen.subscriberKey=LMS

# Endpoint Configuration
nextgen.endpoints.applicantServiceCore.url.getApplicationCycles=http://applicantServiceCore/applicant-service-core/application-cycles
nextgen.endpoints.applicantServiceCore.url.getApplicationRankByAppCycleTypeMappingId=http://applicantServiceCore/applicant-service-core/application-ranks/{applicationCycleTypeMappingId}
nextgen.endpoints.applicantServiceCore.url.postApplicationranks=http://applicantServiceCore/applicant-service-core/application-ranks
nextgen.endpoints.applicantServiceCore.url.putApplicationranks=http://applicantServiceCore/applicant-service-core/application-ranks/{applicationCycleTypeMappingId}
nextgen.endpoints.applicantServiceCore.url.getApplications=http://applicantServiceCore/applicant-service-core/applications/{applicationId}
nextgen.endpoints.applicantServiceCore.url.putApplicationJsonNode=http://applicantServiceCore/applicant-service-core/applications/{id}/jsonDocuments/{node}

## account-service configuration
nextgen.endpoints.accountService.url.base=http://accountService/account-service
nextgen.endpoints.accountService.url.getRolesByPersonId=${nextgen.endpoints.accountService.url.base}/roles?personId={id}
nextgen.endpoints.accountService.url.accounts=${nextgen.endpoints.accountService.url.base}/accounts
nextgen.endpoints.accountService.url.accountsPathEmails=/email-queues
nextgen.endpoints.accountService.url.accountsPathStatuses=/statuses

# Thymeleaf configuration, other environment must override (prefix)
# deployment will be placed into this prefix location
spring.thymeleaf.prefix=D:\\templates\\
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML5
spring.thymeleaf.templateResolverOrder=1
spring.thymeleaf.cacheTTLMs=1800000

# API Configuration
nextgen.endpoints.applicantServiceCore.url.getApplicationsByApplicationCycleAndStatus=http://applicantServiceCore/applicant-service-core/application-cycles/{id}/applications
nextgen.endpoints.applicantServiceCore.url.putApplicationStatuses=http://applicantServiceCore/applicant-service-core/application-statuses?asyncFlag=true
nextgen.endpoints.applicantServiceCore.url.getApplicationCycles=http://applicantServiceCore/applicant-service-core/application-cycles
nextgen.endpoints.applicantServiceCore.url.getApplicationJobLogs=http://applicantServiceCore/applicant-service-core/job-logs
nextgen.endpoints.applicantServiceCore.url.postApplicationJobLogs=http://applicantServiceCore/applicant-service-core/job-logs
nextgen.endpoints.applicantServiceCore.url.postApplicationBatchEvents=http://applicantServiceCore/applicant-service-core/batch-events

#####################################################################
# Quartz Configuration
# Configure Main Scheduler Properties
org.quartz.scheduler.instanceName=applicant-jobs-service
org.quartz.scheduler.instanceId=AUTO

# Configure ThreadPool
org.quartz.threadPool.threadCount=15

# Configure JobStore, read from SchedulerConfiguration.java
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.MSSQLDelegate
org.quartz.jobStore.useProperties=false
org.quartz.jobStore.misfireThreshold=60000
org.quartz.jobStore.tablePrefix=QRTZ_
org.quartz.jobStore.dataSource=quartzDataSource
org.quartz.jobStore.isClustered=true
org.quartz.jobStore.clusterCheckinInterval=15000
org.quartz.jobStore.acquireTriggersWithinLock=true


# Job runs everyday at 1 hour interval and 3 retry attempts are made in the interval of 15 minutes each
nextgen.jobs.applicationRankJob.enabled=true
nextgen.jobs.applicationRankJob.jobName=APPLICATION_RANK_JOB
nextgen.jobs.applicationRankJob.description=Rank and Tier submitted applications
nextgen.jobs.applicationRankJob.groupName=APPLICATION_RANK
nextgen.jobs.applicationRankJob.maxRetry=3
nextgen.jobs.applicationRankJob.retryCron=0 0/15 * 1/1 * ? *
nextgen.jobs.applicationRankJob.cron=0 0 0/1 1/1 * ? *
nextgen.jobs.applicationRankJob.durable=true

# Job runs everyday at 1 hour interval and 3 retry attempts are made in the interval of 15 minutes each
nextgen.jobs.applicationStatusManagerJob.enabled=true
nextgen.jobs.applicationStatusManagerJob.jobName=APPLICATION_STATUS_MANAGER_JOB
nextgen.jobs.applicationStatusManagerJob.description=Update application status post application deadline date and update application status for cycle re-open activity
nextgen.jobs.applicationStatusManagerJob.groupName=APPLICATION_STATUS_MANAGER
nextgen.jobs.applicationStatusManagerJob.maxRetry=3
nextgen.jobs.applicationStatusManagerJob.retryCron=0 0/15 * 1/1 * ? *
nextgen.jobs.applicationStatusManagerJob.cron=0 0 0/1 1/1 * ? *

# Job runs everyday at 1 hour interval and 3 retry attempts are made in the interval of 15 minutes each 
nextgen.jobs.applicationCycleDeadlineEventJob.enabled=true
nextgen.jobs.applicationCycleDeadlineEventJob.jobName=APPLICATION_CYCLE_DEADLINE_EVENT_JOB
nextgen.jobs.applicationCycleDeadlineEventJob.description=Create a new application cycle deadline event if none exists post application cycle deadline date
nextgen.jobs.applicationCycleDeadlineEventJob.groupName=APPLICATION_CYCLE_DEADLINE_EVENT_MANAGER
nextgen.jobs.applicationCycleDeadlineEventJob.maxRetry=3
nextgen.jobs.applicationCycleDeadlineEventJob.retryCron=0 0/15 * 1/1 * ? *
nextgen.jobs.applicationCycleDeadlineEventJob.cron=0 0 0/1 1/1 * ? *

# Job runs everyday at midnight and 3 retry attempts are made in the interval of 15 minutes each 
nextgen.jobs.applicationAwardCalculationJob.enabled=true
nextgen.jobs.applicationAwardCalculationJob.jobName=APPLICATION_AWARD_CALCULATION_JOB
nextgen.jobs.applicationAwardCalculationJob.description=Stage applications for award calculation based on eligibility criteria
nextgen.jobs.applicationAwardCalculationJob.groupName=APPLICATION_AWARD_CALCULATION_MANAGER
nextgen.jobs.applicationAwardCalculationJob.maxRetry=3
nextgen.jobs.applicationAwardCalculationJob.retryCron=0 0/15 * 1/1 * ? *
nextgen.jobs.applicationAwardCalculationJob.cron=0 0 0 ? * * *

#zuul configuration
nextGen.subscriberName=APPLICANT_JOBS_SERVICE
nextGen.subscriberKey=${nextgen.subscribers.applicantJobsService.key}
nextGen.zuul.service.url=${nextGen.zuul.applicantApi.url}
nextGen.macAlgorithm=HmacSHA256

#PROGRAM-SERVICE-CORE configuration
nextGen.programCore.url=/program-service-core
nextGen.programCore.getProgramById=${nextGen.programCore.url}/programs/{id}

#Kafka Configurations
#nextgen.kafka.brokers should be set in environment specific properties
spring.cloud.stream.kafka.binder.brokers=${nextgen.kafka.brokers}
# must be specified separately for basic kafkaTemplate
spring.kafka.bootstrapServers=${nextgen.kafka.brokers}

spring.cloud.stream.kafka.binder.minPartitionCount=4
spring.cloud.stream.kafka.binder.replicationFactor=${nextgen.kafka.replicationFactor}

spring.cloud.stream.kafka.binder.headerMapperBeanName=kafkaMapper

nextgen.award.calculation.topic=${nextgen.kafka.topic.prefix}award.calculation
spring.cloud.stream.bindings.functionRouter-in-0.group=${nextgen.kafka.topic.prefix}applicant-job-service
spring.cloud.stream.bindings.functionRouter-out-0.destination=${nextgen.award.calculation.topic}
spring.cloud.function.routing-expression=headers['EventType']!=null ? headers['EventType'] : headers['__table'] + '_' + headers['__op']

spring.cloud.stream.kafka.binder.configuration.client-id=${nextgen.kafka.topic.prefix}applicant-job-service
spring.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.cloud.stream.kafka.binder.configuration.reconnect.backoff.ms=${nextgen.kafka.reconnectBackoffMs}
spring.cloud.stream.kafka.binder.configuration.reconnect.backoff.max.ms=${nextgen.kafka.reconnectBackoffMaxMs}

# Tracing headers
nextgen.kafka.rawHeaders.X-RequestId=true
nextgen.kafka.rawHeaders.X-SessionId=true
nextgen.kafka.rawHeaders.X-B3-TraceId=true
nextgen.kafka.rawHeaders.X-B3-SpanId=true

#Configuration for non spring boot headers
nextgen.kafka.rawHeaders.EventType=true
nextgen.kafka.rawHeaders.id=true

nextgen.kafka.producerClientId=${nextgen.kafka.topic.prefix}applicant-job-service

# DLQ
spring.cloud.stream.kafka.bindings.functionRouter-in-0.consumer.enable-dlq=true
spring.cloud.stream.kafka.bindings.functionRouter-in-0.consumer.dlq-name=${nextgen.kafka.topic.prefix}applicant-job-service


#JSONDOCUMENT - MAPPINGS
nextgen.formdata.appIngestion.applicationReopen.sectionKey=applicationReopen
nextgen.formdata.appIngestion.applicationReopen.reopenedFlag=reopenedFlag
nextgen.formdata.appIngestion.applicationReopen.reopenedStartDate=reopenedStartDate
nextgen.formdata.appIngestion.applicationReopen.reopenedEndDate=reopenedEndDate
nextgen.formdata.appIngestion.applicationReopen.comment=comment

nextgen.formdata.appIngestion.applicationReopenStartStatus=SUBMITTED_INELIGIBLE,NOT_SUBMITTED_DEADLINE_SCHOOL_NOT_FOUND,NOT_SUBMITTED_DEADLINE_ELIGIBILITY_FAILED,SUBMITTED_REVIEW_NOT_STARTED,NOT_SUBMITTED_DEADLINE,NOT_SUBMITTED_DEADLINE_EMPLOYMENT_NOT_FOUND
nextgen.formdata.appIngestion.applicationReopenCloseStatus=IN_PROGRESS,IN_PROGRESS_ELIGIBILITY_FAILED,IN_PROGRESS_EMPLOYMENT_NOT_FOUND,IN_PROGRESS_SCHOOL_NOT_FOUND
nextgen.formdata.appIngestion.awardCalculationStatus=SUBMITTED_REVIEW_NOT_STARTED,SELECTED_FOR_REVIEW,UNDER_DOCUMENT_REVIEW_AND_ELIGIBILITY,UNDER_REVIEW_VERIF,UNDER_QUALITY_REVIEW,UNDER_EXCEPTION_REVIEW,AWAITING_SCORES_AWARD_AMOUNT,ELIGIBLE_COI,SELECTED_FOR_COI,PENDING_RESPONSE,ACCEPTED_COI,ACCEPTED_AWARD,SELECTED_FOR_FINAL_REVIEW,FINAL_REVIEW,PENDING_OBLIGATION,FINAL_REVIEW_HOLD
nextgen.formdata.appIngestion.awardRecalculationProgramExtIds=1,5